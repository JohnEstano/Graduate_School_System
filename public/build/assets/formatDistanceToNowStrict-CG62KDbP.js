import{c as S}from"./constructNow-Chb2L4Vx.js";import{g as z,e as N,n as w,b as g,d as D,f as x,h as M,a as y}from"./en-US-BA9orzCf.js";import{c as T,g as Y}from"./getRoundingMethod-Btu-7J5l.js";function b(r,i,e){const I=z(),s=(e==null?void 0:e.locale)??I.locale??N,u=T(r,i);if(isNaN(u))throw new RangeError("Invalid time value");const a=Object.assign({},e,{addSuffix:e==null?void 0:e.addSuffix,comparison:u}),[d,h]=w(e==null?void 0:e.in,...u>0?[i,r]:[r,i]),c=Y((e==null?void 0:e.roundingMethod)??"round"),o=h.getTime()-d.getTime(),f=o/y,O=g(h)-g(d),m=(o-O)/y,l=e==null?void 0:e.unit;let n;if(l?n=l:f<1?n="second":f<60?n="minute":f<D?n="hour":m<x?n="day":m<M?n="month":n="year",n==="second"){const t=c(o/1e3);return s.formatDistance("xSeconds",t,a)}else if(n==="minute"){const t=c(f);return s.formatDistance("xMinutes",t,a)}else if(n==="hour"){const t=c(f/60);return s.formatDistance("xHours",t,a)}else if(n==="day"){const t=c(m/D);return s.formatDistance("xDays",t,a)}else if(n==="month"){const t=c(m/x);return t===12&&l!=="month"?s.formatDistance("xYears",1,a):s.formatDistance("xMonths",t,a)}else{const t=c(m/M);return s.formatDistance("xYears",t,a)}}function _(r,i){return b(r,S(r),i)}export{_ as f};
