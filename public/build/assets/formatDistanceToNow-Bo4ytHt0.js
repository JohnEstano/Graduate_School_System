import{c as O}from"./constructNow-Chb2L4Vx.js";import{t as g,n as I,g as y,e as T,b as S,d as X,f as h}from"./en-US-BA9orzCf.js";import{c as D,g as b}from"./getRoundingMethod-Btu-7J5l.js";import{d as w}from"./differenceInCalendarMonths-HUNRrXGm.js";import{e as N}from"./endOfDay-UBg8OSOW.js";import{e as _}from"./endOfMonth-CK_ShA5m.js";function Y(a,r){return+g(a)-+g(r)}function v(a,r){const t=g(a,r==null?void 0:r.in);return+N(t,r)==+_(t,r)}function z(a,r,t){const[i,e,u]=I(t==null?void 0:t.in,a,a,r),c=D(e,u),n=Math.abs(w(e,u));if(n<1)return 0;e.getMonth()===1&&e.getDate()>27&&e.setDate(30),e.setMonth(e.getMonth()-c*n);let o=D(e,u)===-c;v(i)&&n===1&&D(i,u)===1&&(o=!1);const l=c*(n-+o);return l===0?0:l}function A(a,r,t){const i=Y(a,r)/1e3;return b(t==null?void 0:t.roundingMethod)(i)}function L(a,r,t){const i=y(),e=(t==null?void 0:t.locale)??i.locale??T,u=2520,c=D(a,r);if(isNaN(c))throw new RangeError("Invalid time value");const n=Object.assign({},t,{addSuffix:t==null?void 0:t.addSuffix,comparison:c}),[o,l]=I(t==null?void 0:t.in,...c>0?[r,a]:[a,r]),m=A(l,o),x=(S(l)-S(o))/1e3,s=Math.round((m-x)/60);let d;if(s<2)return t!=null&&t.includeSeconds?m<5?e.formatDistance("lessThanXSeconds",5,n):m<10?e.formatDistance("lessThanXSeconds",10,n):m<20?e.formatDistance("lessThanXSeconds",20,n):m<40?e.formatDistance("halfAMinute",0,n):m<60?e.formatDistance("lessThanXMinutes",1,n):e.formatDistance("xMinutes",1,n):s===0?e.formatDistance("lessThanXMinutes",1,n):e.formatDistance("xMinutes",s,n);if(s<45)return e.formatDistance("xMinutes",s,n);if(s<90)return e.formatDistance("aboutXHours",1,n);if(s<X){const f=Math.round(s/60);return e.formatDistance("aboutXHours",f,n)}else{if(s<u)return e.formatDistance("xDays",1,n);if(s<h){const f=Math.round(s/X);return e.formatDistance("xDays",f,n)}else if(s<h*2)return d=Math.round(s/h),e.formatDistance("aboutXMonths",d,n)}if(d=z(l,o),d<12){const f=Math.round(s/h);return e.formatDistance("xMonths",f,n)}else{const f=d%12,M=Math.trunc(d/12);return f<3?e.formatDistance("aboutXYears",M,n):f<9?e.formatDistance("overXYears",M,n):e.formatDistance("almostXYears",M+1,n)}}function F(a,r){return L(a,O(a),r)}export{F as f};
